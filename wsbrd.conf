# Wi-SUN border router configuration example

# Parsing rules:
#   - Everything after # is ignored
#   - Spaces are ignored
#   - Escape sequences \xXX (eg. \x20 for space, \x0A for new line) are accepted
#     in values.
#   - These characters are accepted (you have to use escaped sequences): SPACE,
#     '#', '\\', '\n' and '\r'
#
# Unless it is specified int the comment, commented settings are optional and
# the value shown is the default value.
#
# Unless it is specified in the comment, if an option appear multiple times in
# the file, only the last one is take into account.

# By default, wsbrd create a new tunnel interface with an automatically
# generated name. You force a specific name here. The device is created if it
# does not exist. You can also create the device before running wsbrd with
# 'ip tuntap add tun0'.
# If wsbrd has to create the tunnel, root permissions will be necessary.
#tun_device = tun0

# Automatically configure the IP of the tunneling interface this the prefix
# bellow. Set it to false if you prefer to manage the IP yourself.
# If enabled, you need to execute wsbrd with root permissions.
#tun_autoconf = true

# Wi-SUN network name
#network_name = <Set by Docker image>

# Prefix used to generate IP addresses for RPL traffic (DODAGID will derive from
# it). This prefix does not aim to change during network lifetime.
# You can directly use your GUA (eg. 2001:db8::/64) prefix here. However, for
# more flexibility, you may prefer to set an ULA here and add an extra GUA (not
# yet supported).
# Prefix length different from /64 are not yet supported
#ipv6_prefix = <Set by Docker image>

# For the domain, mode and class parameters below, only some combination are
# valid:
#
#      |   1   |   2   |   3   |   4
#   -- | ----- | ----- | ----- | -----
#   1a | IN/EU |       |       |
#   1b | CN/NA |       |       |
#   2a |   NA  | IN/EU |       |  EU
#   2b |       | JP/IN |       |
#   3  |       | NA/EU |       |  EU
#   4a |       |  NA   |       |
#   4b |       |       |  JP   |
#   5  |       |       |  NA   |

# Wi-SUN regulatory domain. Valid values: WW, EU, NA, JP...
domain = NA

# Operating mode. Valid values: 1a, 1b (default), 2a, 2b, 3, 4a, 4b and 5
mode = 1b

# Operating class. Valid values: 1 (default), 2, 3 or 4
class = 1

# Optimize network timings considering the number of expected nodes on the
# network. Valid values: CERT (development and certification),  S (< 100,
# default), M (100-800), L (800-2500), XL (> 2500)
size = SMALL

# Private key (keep it secret). PEM and DER formats are accepted.
key = /usr/local/share/wsbrd/examples/br_key.pem

# Certificate for the key. PEM and DER formats are accepted.
certificate = /usr/local/share/wsbrd/examples/br_cert.pem

# Certificate of the authority (CA) (shared with all devices). PEM and DER
# formats are accepted.
authority = /usr/local/share/wsbrd/examples/ca_cert.pem

# Where to storage working data. This value is prepended to the file paths. So
# it is possible to configure the directory where the data is stored and a
# optional prefix for your data (ie. /tmp/wsbrd/br1_).
# The stored data mainly contains negotiated keys to speed-up connections when
# service restart.
# Ensure the directories exist and you have writing permissions.
#storage_prefix = /var/lib/wsbrd/

# List of allowed channels for the frequency hopping (FHSS) process. Default is
# 0-255 (all). If only one channel is selected, the FHSS will be disabled (so
# you will use "fixed channel" mode).
# This parameter accept a coma separated list of "ranges". Each "range" can be
# two numbers separated by a dash or one unique. Example: 0,3-5,10-100
#allowed_channels = 0-255

# Use the specified GTKs instead of generating a random ones. In most of the
# cases, setting gtk[0] is sufficient to be able to decode the traffic.
# If keys were already present in cache (see storage_prefix), they are
# discarded.
#gtk[0] = 00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00
#gtk[1] = 00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00
#gtk[2] = 00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00
#gtk[3] = 00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00

